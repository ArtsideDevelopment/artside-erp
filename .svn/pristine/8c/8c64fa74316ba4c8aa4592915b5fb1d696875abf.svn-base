<?php/*   * libs/xajax/xajax_func/import_export_func_xajax.php * Functions for working with import and export * Функции для работы с импортом и экспортом* @author ArtSide 04.05.2018  * @copyright © 2018 ArtSide   *//* * Функция импорта товаров из excel * Function import products from excel* @param array $Id * @return xajaxResponse */ function Import_Products($Id){  $objResponse = new xajaxResponse();  require_once(AS_ROOT .'libs/query_set.php');  require_once(AS_ROOT .'libs/query_variables/query_price.php');   $all_error="";   // Подключаем проверку заполнения полей  include_once AS_ROOT .'libs/check/check_add_price.php';     if($errors==0){         // проверяем все входящие переменные на наличие xss и sql инъекции          $add_date = date("Y-m-d H:i:s");      $materials_price_file = isset($Id['materials_price_file']) ? check_form($Id['materials_price_file']) : "";      $jobs_price_file = isset($Id['jobs_price_file']) ? check_form($Id['jobs_price_file']) : "";      $coefficients_file = isset($Id['coefficients_price_file']) ? check_form($Id['coefficients_price_file']) : "";      require_once(AS_ROOT .'libs/excel_func.php');      try{          $res = DB::mysqliQuery(AS_DATABASE,"              INSERT INTO                   `". AS_DBPREFIX ."prices`               SET                    ".m_query($new_price_str, $Id).",                                              `add_date`='".$add_date."'                                                            ");            $price_id=DB::getInsertId();                    loadPriceFromExcel('price_list_materials', $price_id, $materials_price_file);          loadPriceFromExcel('price_list_jobs', $price_id, $jobs_price_file);          loadCoefficientsFromExcel('price_list_coefficients', $price_id, $coefficients_file);          $dialog_msg= DB::GetSuccessExeption('add_price');      }      catch (ExceptionDataBase $edb){          $edb->HandleExeption(__FILE__."->".__FUNCTION__."->".__LINE__);          $dialog_msg = $edb->GetNoticeExeption("save_error");      }       $objResponse->assign("uk-modal-content-replace","innerHTML",  $dialog_msg);      $objResponse->script("        var modal = UIkit.modal('#modal_default');        modal.show();        ");  }   else{      $all_error="Проверьте правильность заполнения полей отмеченных *. ";  }  $objResponse->assign("all_error","innerHTML", $all_error);  return $objResponse;}